{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/colinevelard/Desktop/Basso/basso/frontend/pages/_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport App from \"next/app\";\nimport '../styles/globals.css';\nimport { createContext } from \"react\";\nimport { fetchAPI } from \"../api/api\"; // Store Strapi Global object in context\n\nexport const GlobalContext = /*#__PURE__*/createContext({});\n\nconst MyApp = ({\n  Component,\n  pageProps\n}) => {\n  const {\n    global\n  } = pageProps;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n      value: global,\n      children: /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}; // getInitialProps disables automatic static optimization for pages that don't\n// have getStaticProps. So article, category and home pages still get SSG.\n// Hopefully we can replace this with getStaticProps once this issue is fixed:\n// https://github.com/vercel/next.js/discussions/10949\n\n\nMyApp.getInitialProps = async ctx => {\n  // Calls page's `getInitialProps` and fills `appProps.pageProps`\n  const appProps = await App.getInitialProps(ctx); // Fetch global site settings from Strapi\n  // const global = await fetchAPI(\"/global\");\n  // Pass the data to our page via props\n\n  return _objectSpread(_objectSpread({}, appProps), {}, {\n    pageProps: {\n      global\n    }\n  });\n};\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/colinevelard/Desktop/Basso/basso/frontend/pages/_app.js"],"names":["App","createContext","fetchAPI","GlobalContext","MyApp","Component","pageProps","global","getInitialProps","ctx","appProps"],"mappings":";;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAO,uBAAP;AACA,SAASC,aAAT,QAA8B,OAA9B;AACA,SAASC,QAAT,QAAyB,YAAzB,C,CACA;;AACA,OAAO,MAAMC,aAAa,gBAAGF,aAAa,CAAC,EAAD,CAAnC;;AAEP,MAAMG,KAAK,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA8B;AAC1C,QAAM;AAAEC,IAAAA;AAAF,MAAaD,SAAnB;AAEA,sBACE;AAAA,2BACE,QAAC,aAAD,CAAe,QAAf;AAAwB,MAAA,KAAK,EAAEC,MAA/B;AAAA,6BACE,QAAC,SAAD,oBAAeD,SAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAOD,CAVD,C,CAYA;AACA;AACA;AACA;;;AACAF,KAAK,CAACI,eAAN,GAAwB,MAAOC,GAAP,IAAe;AACrC;AACA,QAAMC,QAAQ,GAAG,MAAMV,GAAG,CAACQ,eAAJ,CAAoBC,GAApB,CAAvB,CAFqC,CAGrC;AACA;AACA;;AACA,yCAAYC,QAAZ;AAAsBJ,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAAjC;AACD,CAPD;;AASA,eAAeH,KAAf","sourcesContent":["import App from \"next/app\";\nimport '../styles/globals.css';\nimport { createContext } from \"react\";\nimport { fetchAPI } from \"../api/api\";\n// Store Strapi Global object in context\nexport const GlobalContext = createContext({});\n\nconst MyApp = ({ Component, pageProps }) => {\n  const { global } = pageProps;\n\n  return (\n    <>\n      <GlobalContext.Provider value={global}>\n        <Component {...pageProps} />\n      </GlobalContext.Provider>\n    </>\n  );\n};\n\n// getInitialProps disables automatic static optimization for pages that don't\n// have getStaticProps. So article, category and home pages still get SSG.\n// Hopefully we can replace this with getStaticProps once this issue is fixed:\n// https://github.com/vercel/next.js/discussions/10949\nMyApp.getInitialProps = async (ctx) => {\n  // Calls page's `getInitialProps` and fills `appProps.pageProps`\n  const appProps = await App.getInitialProps(ctx);\n  // Fetch global site settings from Strapi\n  // const global = await fetchAPI(\"/global\");\n  // Pass the data to our page via props\n  return { ...appProps, pageProps: { global } };\n};\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}